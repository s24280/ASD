public class TestInsertionSort {
    public static void main(String[] args) {
        int[] sizes = {2000, 4000, 8000, 16000, 32000};

        for (int n : sizes) {
            int[] arr = generateSortedArray(n);
            long startTime = System.nanoTime();
            insertionSort(arr);
            long endTime = System.nanoTime();
            double bestCaseRatio = (double) n / (endTime - startTime);

            arr = generateReverseSortedArray(n);
            startTime = System.nanoTime();
            insertionSort(arr);
            endTime = System.nanoTime();
            double worstCaseRatio = (double) (n * n) / (endTime - startTime);

            System.out.println("n = " + n);
            System.out.println("Best-case: " + bestCaseRatio);
            System.out.println("Worst-case: " + worstCaseRatio);
            System.out.println();
        }
    }

    public static int[] generateSortedArray(int n) {
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = i + 1;
        }
        return arr;
    }

    public static int[] generateReverseSortedArray(int n) {
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = n - i;
        }
        return arr;
    }

    public static void insertionSort(int[] arr) {
        int n = arr.length;
        for (int j = 1; j < n; j++) {
            int key = arr[j];
            int i = j - 1;
            while (i >= 0 && arr[i] > key) {
                arr[i + 1] = arr[i];
                i--;
            }
            arr[i + 1] = key;
        }
    }
}
